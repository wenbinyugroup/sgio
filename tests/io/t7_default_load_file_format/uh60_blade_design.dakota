# uh60_blade_design.dakota

environment
  output_file = 'uh60_blade_design.out'
  write_restart = 'uh60_blade_design.rst'
  error_file = 'uh60_blade_design.err'
  tabular_data
    tabular_data_file = 'uh60_blade_design_tabular.dat'
  results_output
    results_output_file = 'uh60_blade_design_results'


method
  soga
    max_iterations =  100
    max_function_evaluations =  20000
    population_size =  200
    seed =  1027
    print_each_pop


model
  single

variables
  active = design

  continuous_design = 11
    descriptors = 'wl_a2_sta1'  'wl_a2_stam'  'wl_a2_sta4'  'wt_a2_sta1'  'wt_a2_stam'  'wt_a2_sta4'  'pnsmc_a2_sta1'  'pnsmc_a2_stam'  'pnsmc_a2_sta4'  'rnsm'  'r_stam'
    upper_bounds = 0.9  0.9  0.9  0.7  0.7  0.7  0.985  0.985  0.985  0.01  0.8
    lower_bounds = 0.8  0.8  0.8  0.5  0.5  0.5  0.95  0.95  0.95  0.001  0.3

  discrete_design_range = 15
    descriptors = 'mi_spar_1'  'mi_le'  'mi_te'  'np_spar_seg1'  'np_spar_seg2'  'np_le_seg1'  'np_le_seg2'  'np_te_seg1'  'np_te_seg2'  'fo_spar_1'  'fo_spar_2'  'fo_spar_3'  'fo_spar_4'  'fo_le'  'fo_te'
    upper_bounds = 4  4  4  20  20  20  20  20  20  90  90  90  90  90  90
    lower_bounds = 1  1  1  1  1  1  1  1  1  -90  -90  -90  -90  -90  -90



interface
  analysis_driver = 'python run.py uh60_blade.yml 1'
    fork
      parameters_file =  'input.in'
      results_file =  'output.out'
      file_save
      work_directory
        directory_tag
        directory_save
        named =  'evals/eval'
        copy_file =  'run.py'  'uh60_blade.yml'  'design/*'  'scripts/*'
  failure_capture
    recover =  1e12  1e12  1e12  1e12


responses
  descriptors =  'diff_gj'  'diff_eiyy'  'diff_eizz'  'sr_min'
  objective_functions = 3
    sense =  'min'  'min'  'min'
    weights =  0.5  0.8  0.8
    nonlinear_inequality_constraints = 1
      upper_bounds =  1e12
      lower_bounds =  1
  no_gradients
  no_hessians


