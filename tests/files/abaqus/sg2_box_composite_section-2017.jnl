# -*- coding: mbcs -*-
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=200.0)
mdb.models['Model-1'].sketches['__profile__'].rectangle(point1=(-25.0, 25.0), 
    point2=(25.0, -25.0))
mdb.models['Model-1'].sketches['__profile__'].rectangle(point1=(-20.0, 20.0), 
    point2=(20.0, -20.0))
mdb.models['Model-1'].Part(dimensionality=TWO_D_PLANAR, name='Part-1', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['Part-1'].BaseShell(sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].ConstrainedSketch(gridSpacing=3.53, name='__profile__', 
    sheetSize=141.42, transform=
    mdb.models['Model-1'].parts['Part-1'].MakeSketchTransform(
    sketchPlane=mdb.models['Model-1'].parts['Part-1'].faces[0], 
    sketchPlaneSide=SIDE1, sketchOrientation=RIGHT, origin=(0.0, 0.0, 0.0)))
mdb.models['Model-1'].parts['Part-1'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__profile__'])
mdb.models['Model-1'].sketches['__profile__'].rectangle(point1=(-21.18, 21.18), 
    point2=(21.18, -21.18))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-25.0, 25.0), 
    point2=(-20.0, 20.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(20.0, 20.0), point2=
    (25.0, 25.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-25.0, -25.0), 
    point2=(-20.0, -20.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(25.0, -25.0), 
    point2=(20.0, -20.0))
mdb.models['Model-1'].parts['Part-1'].PartitionFaceBySketch(faces=
    mdb.models['Model-1'].parts['Part-1'].faces.getSequenceFromMask(('[#1 ]', 
    ), ), sketch=mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].Material(name='Material-1')
mdb.models['Model-1'].materials['Material-1'].Density(table=((1.0, ), ))
mdb.models['Model-1'].materials['Material-1'].Elastic(table=((10.0, 20.0, 30.0, 
    0.12, 0.13, 0.23, 1.2, 1.3, 2.3), ), type=ENGINEERING_CONSTANTS)
mdb.models['Model-1'].CompositeShellSection(idealization=NO_IDEALIZATION, 
    integrationRule=SIMPSON, layup=(SectionLayer(thickness=1.0, 
    material='Material-1'), SectionLayer(thickness=1.0, material='Material-1'))
    , layupName='layup1', name='Section-1', poissonDefinition=DEFAULT, 
    preIntegrate=OFF, symmetric=False, temperature=GRADIENT, thicknessModulus=
    None, thicknessType=UNIFORM, useDensity=OFF)
del mdb.models['Model-1'].sections['Section-1']
mdb.models['Model-1'].parts['Part-1'].Set(edges=
    mdb.models['Model-1'].parts['Part-1'].edges.getSequenceFromMask((
    '[#2842 ]', ), ), name='Set-1')
mdb.models['Model-1'].parts['Part-1'].CompositeLayup(description='', 
    elementType=SOLID, name='CompositeLayup-1', symmetric=False, 
    thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].parts['Part-1'].compositeLayups['CompositeLayup-1'].CompositePly(
    additionalRotationField='', additionalRotationType=ROTATION_NONE, angle=0.0
    , axis=AXIS_3, material='Material-1', numIntPoints=1, orientationType=
    SPECIFY_ORIENT, orientationValue=0.0, plyName='Ply-1', region=Region(
    faces=mdb.models['Model-1'].parts['Part-1'].faces.getSequenceFromMask(
    mask=('[#1b ]', ), )), suppressed=False, thickness=1.0, thicknessType=
    SPECIFY_THICKNESS)
mdb.models['Model-1'].parts['Part-1'].compositeLayups['CompositeLayup-1'].ReferenceOrientation(
    additionalRotationField='', additionalRotationType=ROTATION_NONE, angle=0.0
    , axis=AXIS_3, flipNormalDirection=False, flipPrimaryDirection=True, 
    localCsys=None, normalAxisDefinition=VECTOR, normalAxisDirection=AXIS_3, 
    normalAxisVector=(0.0, 0.0, 1.0), orientationType=DISCRETE, 
    primaryAxisDefinition=EDGE, primaryAxisDirection=AXIS_1, primaryAxisRegion=
    mdb.models['Model-1'].parts['Part-1'].sets['Set-1'], stackDirection=
    STACK_3)
mdb.models['Model-1'].parts['Part-1'].Set(edges=
    mdb.models['Model-1'].parts['Part-1'].edges.getSequenceFromMask((
    '[#d0200 ]', ), ), name='Set-3')
mdb.models['Model-1'].parts['Part-1'].CompositeLayup(description='', 
    elementType=SOLID, name='CompositeLayup-2', symmetric=False, 
    thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].parts['Part-1'].compositeLayups['CompositeLayup-2'].CompositePly(
    additionalRotationField='', additionalRotationType=ROTATION_NONE, angle=0.0
    , axis=AXIS_3, material='Material-1', numIntPoints=1, orientationType=
    SPECIFY_ORIENT, orientationValue=45.0, plyName='Ply-1', region=Region(
    faces=mdb.models['Model-1'].parts['Part-1'].faces.getSequenceFromMask(
    mask=('[#e4 ]', ), )), suppressed=False, thickness=1.0, thicknessType=
    SPECIFY_THICKNESS)
mdb.models['Model-1'].parts['Part-1'].compositeLayups['CompositeLayup-2'].ReferenceOrientation(
    additionalRotationField='', additionalRotationType=ROTATION_NONE, angle=0.0
    , axis=AXIS_3, flipNormalDirection=False, flipPrimaryDirection=False, 
    localCsys=None, normalAxisDefinition=VECTOR, normalAxisDirection=AXIS_3, 
    normalAxisVector=(0.0, 0.0, 1.0), orientationType=DISCRETE, 
    primaryAxisDefinition=EDGE, primaryAxisDirection=AXIS_1, primaryAxisRegion=
    mdb.models['Model-1'].parts['Part-1'].sets['Set-3'], stackDirection=
    STACK_3)
# Save by tian50 on 2023_10_26-19.30.02; build 2017 2016_09_27-17.54.59 126836
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Part-1-1', 
    part=mdb.models['Model-1'].parts['Part-1'])
mdb.models['Model-1'].parts['Part-1'].setMeshControls(elemShape=QUAD, regions=
    mdb.models['Model-1'].parts['Part-1'].faces.getSequenceFromMask(('[#ff ]', 
    ), ), technique=STRUCTURED)
mdb.models['Model-1'].parts['Part-1'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=5.0)
mdb.models['Model-1'].parts['Part-1'].generateMesh()
# Save by tian50 on 2023_10_26-19.30.33; build 2017 2016_09_27-17.54.59 126836
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.Job(activateLoadBalancing=False, atTime=None, contactPrint=OFF, 
    description='', echoPrint=OFF, explicitPrecision=SINGLE, 
    getMemoryFromAnalysis=True, historyPrint=OFF, memory=90, memoryUnits=
    PERCENTAGE, model='Model-1', modelPrint=OFF, multiprocessingMode=DEFAULT, 
    name='sg2_box_composite_section', nodalOutputPrecision=SINGLE, numCpus=1, 
    numDomains=1, numGPUs=0, parallelizationMethodExplicit=DOMAIN, queue=None, 
    resultsFormat=ODB, scratch='', type=ANALYSIS, userSubroutine='', waitHours=
    0, waitMinutes=0)
# Save by tian50 on 2023_10_26-19.36.06; build 2017 2016_09_27-17.54.59 126836
