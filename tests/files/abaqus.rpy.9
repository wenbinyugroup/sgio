# -*- coding: mbcs -*-
#
# Abaqus/CAE Release 2017 replay file
# Internal Version: 2016_09_27-17.54.59 126836
# Run by tian50 on Tue Oct 31 18:42:41 2023
#

# from driverUtils import executeOnCaeGraphicsStartup
# executeOnCaeGraphicsStartup()
#: Executing "onCaeGraphicsStartup()" in the site directory ...
from abaqus import *
from abaqusConstants import *
session.Viewport(name='Viewport: 1', origin=(0.0, 0.0), width=319.21923828125, 
    height=215.422225952148)
session.viewports['Viewport: 1'].makeCurrent()
session.viewports['Viewport: 1'].maximize()
from caeModules import *
from driverUtils import executeOnCaeStartup
executeOnCaeStartup()
session.viewports['Viewport: 1'].partDisplay.geometryOptions.setValues(
    referenceRepresentation=ON)
s = mdb.models['Model-1'].ConstrainedSketch(name='__profile__', 
    sheetSize=200.0)
g, v, d, c = s.geometry, s.vertices, s.dimensions, s.constraints
s.setPrimaryObject(option=STANDALONE)
session.viewports['Viewport: 1'].view.setValues(nearPlane=170.738, 
    farPlane=206.385, width=216.512, height=110.892, cameraPosition=(-5.21609, 
    0.057884, 188.562), cameraTarget=(-5.21609, 0.057884, 0))
s.CircleByCenterPerimeter(center=(0.0, 0.0), point1=(50.0, 0.0))
p = mdb.models['Model-1'].Part(name='Part-1', dimensionality=TWO_D_PLANAR, 
    type=DEFORMABLE_BODY)
p = mdb.models['Model-1'].parts['Part-1']
p.BaseShell(sketch=s)
s.unsetPrimaryObject()
p = mdb.models['Model-1'].parts['Part-1']
session.viewports['Viewport: 1'].setValues(displayedObject=p)
del mdb.models['Model-1'].sketches['__profile__']
p = mdb.models['Model-1'].parts['Part-1']
f, e, d1 = p.faces, p.edges, p.datums
t = p.MakeSketchTransform(sketchPlane=f[0], sketchPlaneSide=SIDE1, origin=(0.0, 
    0.0, 0.0))
s1 = mdb.models['Model-1'].ConstrainedSketch(name='__profile__', 
    sheetSize=282.06, gridSpacing=7.05, transform=t)
g, v, d, c = s1.geometry, s1.vertices, s1.dimensions, s1.constraints
s1.setPrimaryObject(option=SUPERIMPOSE)
p = mdb.models['Model-1'].parts['Part-1']
p.projectReferencesOntoSketch(sketch=s1, filter=COPLANAR_EDGES)
s1.ConstructionLine(point1=(-5.2875, 0.0), point2=(5.28750000004657, 0.0))
s1.HorizontalConstraint(entity=g[3], addUndoState=False)
s1.ConstructionLine(point1=(0.0, -5.2875), point2=(0.0, 3.52499999995343))
s1.VerticalConstraint(entity=g[4], addUndoState=False)
s1.FixedConstraint(entity=v[0])
s1.FixedConstraint(entity=g[3])
s1.FixedConstraint(entity=g[4])
session.viewports['Viewport: 1'].view.setValues(nearPlane=278.267, 
    farPlane=285.871, width=40.8045, height=20.8991, cameraPosition=(5.9512, 
    -1.98273, 282.069), cameraTarget=(5.9512, -1.98273, 0))
s1.CircleByCenterPerimeter(center=(0.0, 0.0), point1=(-12.7, 0.0))
session.viewports['Viewport: 1'].view.setValues(nearPlane=273.571, 
    farPlane=290.567, width=103.226, height=52.8701, cameraPosition=(21.9468, 
    0.140825, 282.069), cameraTarget=(21.9468, 0.140825, 0))
s1.ConstructionLine(point1=(34.8093338012695, 0.0), point2=(34.8093338012695, 
    7.05))
s1.VerticalConstraint(entity=g[6], addUndoState=False)
s1.DistanceDimension(entity1=g[4], entity2=g[6], textPoint=(23.0864734649658, 
    -19.0107727050781), value=38.1)
session.viewports['Viewport: 1'].view.setValues(width=97.0327, height=49.6979, 
    cameraPosition=(21.642, -0.587201, 282.069), cameraTarget=(21.642, 
    -0.587201, 0))
s1.Line(point1=(38.1, 0.0), point2=(-2.26413345336914, 14.9090089797974))
s1.CoincidentConstraint(entity1=v[3], entity2=g[3], addUndoState=False)
s1.Line(point1=(38.1, 0.0), point2=(-1.7625, -15.8625))
s1.FixedConstraint(entity=g[5])
s1.TangentConstraint(entity1=g[5], entity2=g[7])
s1.TangentConstraint(entity1=g[5], entity2=g[8])
s1.autoTrimCurve(curve1=g[7], point1=(1.22537040710449, 13.258526802063))
s1.autoTrimCurve(curve1=g[10], point1=(-0.794870376586914, 13.930947303772))
s1.autoTrimCurve(curve1=g[8], point1=(-1.40706253051758, -14.1272830963135))
s1.autoTrimCurve(curve1=g[11], point1=(0.919273376464844, -13.2714767456055))
s1.autoTrimCurve(curve1=g[5], point1=(8.44925880432129, -9.48147678375244))
s1.autoTrimCurve(curve1=g[14], point1=(12.6121768951416, 2.49981594085693))
s1.offset(distance=1.524, objectList=(g[9], g[12], g[13], g[15]), side=RIGHT)
p = mdb.models['Model-1'].parts['Part-1']
f = p.faces
pickedFaces = f.getSequenceFromMask(mask=('[#1 ]', ), )
e1, d2 = p.edges, p.datums
p.PartitionFaceBySketch(faces=pickedFaces, sketch=s1)
s1.unsetPrimaryObject()
del mdb.models['Model-1'].sketches['__profile__']
p = mdb.models['Model-1'].parts['Part-1']
f1 = p.faces
p.RemoveFaces(faceList = f1[0:1]+f1[2:3], deleteCells=False)
session.viewports['Viewport: 1'].view.setValues(nearPlane=274.531, 
    farPlane=291.155, width=89.3822, height=45.7795, viewOffsetX=12.0524, 
    viewOffsetY=0.503838)
mdb.models['Model-1'].parts['Part-1'].setValues(geometryRefinement=EXTRA_FINE)
mdb.saveAs(pathName='C:/Users/tian50/work/sgio/tests/files/sg2_iso_airfoil')
#: The model database has been saved to "C:\Users\tian50\work\sgio\tests\files\sg2_iso_airfoil.cae".
session.viewports['Viewport: 1'].view.setValues(nearPlane=276.309, 
    farPlane=289.377, width=70.2369, height=35.9737, viewOffsetX=11.5892, 
    viewOffsetY=0.61272)
session.viewports['Viewport: 1'].partDisplay.setValues(sectionAssignments=ON, 
    engineeringFeatures=ON)
session.viewports['Viewport: 1'].partDisplay.geometryOptions.setValues(
    referenceRepresentation=OFF)
mdb.models['Model-1'].Material(name='Material-1')
mdb.models['Model-1'].materials['Material-1'].Density(table=((1.06868e-06, ), 
    ))
mdb.models['Model-1'].materials['Material-1'].Elastic(table=((206843.0, 0.49), 
    ))
mdb.models['Model-1'].HomogeneousSolidSection(name='Section-1', 
    material='Material-1', thickness=None)
p = mdb.models['Model-1'].parts['Part-1']
f = p.faces
faces = f.getSequenceFromMask(mask=('[#1 ]', ), )
region = p.Set(faces=faces, name='Set-1')
p = mdb.models['Model-1'].parts['Part-1']
p.SectionAssignment(region=region, sectionName='Section-1', offset=0.0, 
    offsetType=MIDDLE_SURFACE, offsetField='', 
    thicknessAssignment=FROM_SECTION)
mdb.save()
#: The model database has been saved to "C:\Users\tian50\work\sgio\tests\files\sg2_iso_airfoil.cae".
a = mdb.models['Model-1'].rootAssembly
session.viewports['Viewport: 1'].setValues(displayedObject=a)
session.viewports['Viewport: 1'].assemblyDisplay.setValues(
    optimizationTasks=OFF, geometricRestrictions=OFF, stopConditions=OFF)
a = mdb.models['Model-1'].rootAssembly
a.DatumCsysByDefault(CARTESIAN)
p = mdb.models['Model-1'].parts['Part-1']
a.Instance(name='Part-1-1', part=p, dependent=ON)
session.viewports['Viewport: 1'].assemblyDisplay.setValues(mesh=ON)
session.viewports['Viewport: 1'].assemblyDisplay.meshOptions.setValues(
    meshTechnique=ON)
p = mdb.models['Model-1'].parts['Part-1']
session.viewports['Viewport: 1'].setValues(displayedObject=p)
session.viewports['Viewport: 1'].partDisplay.setValues(sectionAssignments=OFF, 
    engineeringFeatures=OFF, mesh=ON)
session.viewports['Viewport: 1'].partDisplay.meshOptions.setValues(
    meshTechnique=ON)
p = mdb.models['Model-1'].parts['Part-1']
p.seedPart(size=1.0, deviationFactor=0.1, minSizeFactor=0.1)
p = mdb.models['Model-1'].parts['Part-1']
p.generateMesh()
p = mdb.models['Model-1'].parts['Part-1']
p.deleteMesh()
p = mdb.models['Model-1'].parts['Part-1']
p.seedPart(size=0.5, deviationFactor=0.1, minSizeFactor=0.1)
p = mdb.models['Model-1'].parts['Part-1']
p.generateMesh()
mdb.save()
#: The model database has been saved to "C:\Users\tian50\work\sgio\tests\files\sg2_iso_airfoil.cae".
a = mdb.models['Model-1'].rootAssembly
a.regenerate()
a = mdb.models['Model-1'].rootAssembly
session.viewports['Viewport: 1'].setValues(displayedObject=a)
session.viewports['Viewport: 1'].assemblyDisplay.setValues(mesh=OFF)
session.viewports['Viewport: 1'].assemblyDisplay.meshOptions.setValues(
    meshTechnique=OFF)
mdb.Job(name='sg2_iso_airfoil', model='Model-1', description='', type=ANALYSIS, 
    atTime=None, waitMinutes=0, waitHours=0, queue=None, memory=90, 
    memoryUnits=PERCENTAGE, getMemoryFromAnalysis=True, 
    explicitPrecision=SINGLE, nodalOutputPrecision=SINGLE, echoPrint=OFF, 
    modelPrint=OFF, contactPrint=OFF, historyPrint=OFF, userSubroutine='', 
    scratch='', resultsFormat=ODB, parallelizationMethodExplicit=DOMAIN, 
    numDomains=1, activateLoadBalancing=False, multiprocessingMode=DEFAULT, 
    numCpus=1, numGPUs=0)
mdb.jobs['sg2_iso_airfoil'].writeInput(consistencyChecking=OFF)
#: The job input file has been written to "sg2_iso_airfoil.inp".
mdb.save()
#: The model database has been saved to "C:\Users\tian50\work\sgio\tests\files\sg2_iso_airfoil.cae".
session.viewports['Viewport: 1'].view.setValues(nearPlane=108.204, 
    farPlane=118.981, width=65.3443, height=33.4678, viewOffsetX=-0.187988, 
    viewOffsetY=0.343372)
session.viewports['Viewport: 1'].assemblyDisplay.setValues(mesh=ON)
session.viewports['Viewport: 1'].assemblyDisplay.meshOptions.setValues(
    meshTechnique=ON)
p = mdb.models['Model-1'].parts['Part-1']
session.viewports['Viewport: 1'].setValues(displayedObject=p)
session.viewports['Viewport: 1'].view.setValues(nearPlane=277.001, 
    farPlane=288.685, width=70.7009, height=36.303, viewOffsetX=10.4397, 
    viewOffsetY=0.333667)
session.viewports['Viewport: 1'].view.fitView()
session.printOptions.setValues(vpDecorations=OFF)
session.printToFile(
    fileName='C:/Users/tian50/work/sgio/tests/files/sg2_iso_airfoil', 
    format=PNG, canvasObjects=(session.viewports['Viewport: 1'], ))
a = mdb.models['Model-1'].rootAssembly
session.viewports['Viewport: 1'].setValues(displayedObject=a)
session.viewports['Viewport: 1'].assemblyDisplay.setValues(mesh=OFF)
session.viewports['Viewport: 1'].assemblyDisplay.meshOptions.setValues(
    meshTechnique=OFF)
session.viewports['Viewport: 1'].view.fitView()
session.viewports['Viewport: 1'].view.fitView()
session.viewports['Viewport: 1'].view.setValues(nearPlane=108.556, 
    farPlane=118.629, width=61.3724, height=31.4335, viewOffsetX=0.462474, 
    viewOffsetY=-0.0949786)
session.viewports['Viewport: 1'].assemblyDisplay.setValues(mesh=ON)
session.printToFile(
    fileName='C:/Users/tian50/work/sgio/tests/files/sg2_iso_airfoil', 
    format=PNG, canvasObjects=(session.viewports['Viewport: 1'], ))
